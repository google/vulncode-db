version: '2'
services:
  vcs-proxy:
    build:
      context: ..
      dockerfile: ./docker/vcs_proxy/Dockerfile
    volumes:
      - ../:/app
      #- /etc/passwd:/etc/passwd:ro
      #- /etc/group:/etc/group:ro
    image: vcs-proxy
    #user: "${UID}:${GID}"
    # The VCS proxy will be reachable from your host on http://127.0.0.1:8088
    ports:
      - "8088:8088"

  database:
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password --init-file /docker-entrypoint-initdb.d/db_schema.sql --character-set-server=utf8 --collation-server=utf8_general_ci
    volumes:
      - ./db-data/:/var/lib/mysql
      # Uncomment if you needs mysql logs.
      #- ./db-logs/:/logs
      - ./db_schema.sql:/docker-entrypoint-initdb.d/db_schema.sql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: pass
    # Publishing mysql port as 3308 for debugging purposes.
    ports:
      - "3306:3306" # Development config
    expose:
      - "3306"

  frontend:
    build:
      context: ..
      dockerfile: ./docker/frontend/Dockerfile
    # Wait for the database to be available before starting the application.
    command: >
      bash -c "while ! (exec 6<>/dev/tcp/database/3306) 2>/dev/null; do
        echo 'Waiting for database:3306...'; sleep 5;
      done;
      bash /app/run.sh"
    volumes:
      - ../:/app
      #- /etc/passwd:/etc/passwd:ro
      #- /etc/group:/etc/group:ro
    environment:
      - MYSQL_HOST=database
      - VCS_PROXY_LOCAL_URL=https://vcs-proxy:8088/
    #user: "${UID}:${GID}"
    depends_on:
      - vcs-proxy
      - database
    image: frontend
    links:
      - "vcs-proxy"
      - "database"
    # The main application will be reachable from your host on http://127.0.0.1:8080
    ports:
      - "8080:8080"
